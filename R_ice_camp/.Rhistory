panel.background = element_rect(fill="white"),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid = element_blank(),
strip.background=element_blank(),
legend.text = element_text(face="italic"),
legend.key.size=unit(2,"line")) +
guides(fill=guide_legend(ncol=1)) +
ylab("Proportion of reads") +
geom_text(aes(x=date,y=n_reads,label=label_black,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="black") +
geom_text(aes(x=date,y=n_reads,label=label_white,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="white") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
scale_color_manual(values=phytoPalette) + scale_fill_manual(values=phytoPalette) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x")
p_species
pdf("../main_figures/phyto_species.pdf", height=20, width=18) ; plot(p_species) ; dev.off()
phyto_species_rank <-long %>%
group_by(species) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(n_reads))
sum(phyto_species_rank$n_reads[1:20])/sum(phyto_species_rank$n_reads)
top_phyto_species <- phyto_species_rank$species[1:20]
#normalise entire study's top20 photosynthetic species again
ps_photo_plot <- ps %>%
subset_taxa(trophic_mode %in% c("photosynthetic","mixotrophic")) %>%
subset_taxa(species %in% top_phyto_species)
ps_photo_plot <- phyloseq_normalize_median(ps_photo_plot)
ps_photo_plot <- phyloseq_transform_to_long(ps_photo_plot)
ps_photo_plot <- filter(ps_photo_plot,is.na(fraction_name)=="FALSE") # normalization removed ASVs with very low reads
normalised_reads <- round(sum(ps_photo_plot$n_reads)/length(unique(ps_photo_plot$sample_name)))
plot_phyto <- ps_photo_plot %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
label <- phyto_colors %>% select(species, label)
#to create labels to label species that has at least 20% of reads
labels <- plot_phyto %>%
filter(n_reads>=0.10*normalised_reads) %>%
left_join(label,by="species") %>%
select(sample_name,species,date,depth_level,fraction_name,label)
plot_phyto <- plot_phyto %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
plot_phyto <- left_join(plot_phyto,labels,by=c("sample_name","species","date","depth_level","fraction_name"))
#black and white labels generated separately
plot_phyto$label_white <- ifelse(plot_phyto$label %in% c("Cr","Pp","P1","P2","P3","P4","C4","C5","C6"), plot_phyto$label, NA)
plot_phyto$label_black <- ifelse(plot_phyto$label %in% c("Mp","Bf","Pa","P5","P6","P7","P8","P9","C1","C2","C3"), plot_phyto$label, NA)
#reorganising the data to plot nicely
plot_phyto$species <- factor(plot_phyto$species,levels=phyto_colors$species)
plot_phyto$fraction_name<-factor(plot_phyto$fraction_name, levels=c("pico", "nano", "micro"))
plot_phyto$depth_level<-factor(plot_phyto$depth_level, levels=c("ICE_1","ICE_0", "WATER_1","WATER_2", "WATER_3", "WATER_4"))
plot_phyto$date<-str_replace(plot_phyto$date,"2016-05-","May ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-06-","Jun ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-07-","Jul ")
plot_phyto$date <- factor(plot_phyto$date, levels=sampling_dates_plot)
p_species <- ggplot(plot_phyto, aes(x=date, y=n_reads,fill=species)) +
geom_bar(position="fill", stat="identity",color="black",size=0.5) + theme_bw()+
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.justification = "top",
legend.spacing.y=unit(1,'cm'),
panel.background = element_rect(fill="white"),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid = element_blank(),
strip.background=element_blank(),
legend.text = element_text(face="italic"),
legend.key.size=unit(2,"line")) +
guides(fill=guide_legend(ncol=1)) +
ylab("Proportion of reads") +
geom_text(aes(x=date,y=n_reads,label=label_black,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="black") +
geom_text(aes(x=date,y=n_reads,label=label_white,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="white") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
scale_color_manual(values=phytoPalette) + scale_fill_manual(values=phytoPalette) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x")
p_species
pdf("../main_figures/phyto_species.pdf", height=20, width=18) ; plot(p_species) ; dev.off()
asv_blast_div <- taxa_DNA %>%
filter(as.numeric(PR2_matches)>0) %>%
group_by(division) %>%
count() %>%
summarise(n) %>%
rename(PR2_matches=n)
asv_div<- taxa_DNA %>%
group_by(division) %>%
count() %>%
summarise(n) %>%
arrange(desc(n))
culture <- left_join(asv_div,asv_blast_div,by="division") %>%
replace(is.na(.), 0) %>%
mutate(no_matches=n-PR2_matches) %>%
pivot_longer(cols=c("PR2_matches","no_matches"),names_to="matches",values_to="count") %>%
mutate(division=str_c(division,"\n (N = ",n,")"))
culture_plot <- ggplot(culture,aes(x=count,y=reorder(division,(n)),fill=matches)) +
geom_bar(position="fill",stat="identity",width=0.8,color="black") +
theme_bw() +
theme(text=element_text(size=18),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.spacing.y=unit(1,'cm'),
panel.background = element_rect(fill="white"),
panel.grid = element_blank()) +
scale_x_continuous(labels=scales::percent, breaks = seq(0,1, by=0.25)) +
scale_fill_manual(values=c("#0072B2","#BBBBBB"),breaks=c("PR2_matches","no_matches"))
culture_plot
pdf("../supplementary_figures/supplementary_culturability.pdf", height=7, width=14) ; plot(culture_plot) ; dev.off()
ps_phyto_DNA <- ps_TS %>%
subset_taxa(rownames(ps_TS@tax_table) %in% taxa_DNA$asv_code)
phyto_otus <- data.frame(otu_table(ps_phyto_DNA))
write.csv(phyto_otus, "../supplementary_tables/photosynthetic_ASVs_OTUtable.csv")
#calculating ASV reads in ice and water
sum_ice_reads <- long_phyto_ice %>%
group_by(asv_code) %>%
summarize(sum_ice_reads=sum(n_reads))
sum_water_reads <- long_phyto_water %>%
group_by(asv_code) %>%
summarize(sum_water_reads=sum(n_reads))
phyto_taxa <- data.frame(tax_table(ps_phyto_DNA)) %>%
rownames_to_column("asv_code")
phyto_taxa <- phyto_taxa %>%
left_join(sum_ice_reads, by="asv_code") %>%
mutate(sum_ice_reads = coalesce(sum_ice_reads, 0)) %>%
left_join(sum_water_reads, by="asv_code") %>%
mutate(sum_water_reads = coalesce(sum_water_reads, 0)) %>%
mutate(sum_reads = sum_ice_reads + sum_water_reads) %>%
arrange(desc(sum_reads))
write.csv(phyto_taxa, "../supplementary_tables/photosynthetic_ASVs_TAXONtable.csv")
phyto_samples <- data.frame(sample_data(ps_phyto_DNA))
write.csv(phyto_samples, "../supplementary_tables/photosynthetic_ASVs_SAMPLEtable.csv")
# add biogeo to ASVs
biogeo <- read.csv("../R_ice_camp/biogeoraphy_assignment_metaPR2/biogeo_casv.csv") %>%
select(-X)
phyto_biogeo <- left_join(phyto_taxa %>% select(asv_code, casv_code), biogeo, by="casv_code") %>%
na.omit()
write.csv(phyto_biogeo, "../supplementary_tables/photosynthetic_ASVs_BIOGEOtable.csv")
total_ice_phyto_reads <- sum(long_phyto_ice$n_reads)
DNA_ice_SEM <- long_phyto_ice %>%
mutate(across(domain_boot:species_boot,as.numeric)) %>%
filter(class %in% c("Bacillariophyceae","Mediophyceae"), genus_boot>=80) %>%
group_by(genus,species,asv_code) %>%
summarise(n_reads=sum(n_reads)) %>%
group_by(genus,species) %>%
summarise(n_reads=sum(n_reads), Nasv=n()) %>%
mutate(pct_reads = (n_reads/total_ice_phyto_reads)*100)
xtable(DNA_ice_SEM)
total_water_phyto_reads <- sum(long_phyto_water$n_reads)
DNA_water_SEM <- long_phyto_water %>%
mutate(across(domain_boot:species_boot,as.numeric)) %>%
filter(class %in% c("Bacillariophyceae","Mediophyceae"), genus_boot>=80) %>%
group_by(genus,species,asv_code) %>%
summarise(n_reads=sum(n_reads)) %>%
group_by(genus,species) %>%
summarise(n_reads=sum(n_reads), Nasv=n()) %>%
mutate(pct_reads = (n_reads/total_water_phyto_reads)*100) %>%
select(-n_reads)
xtable(DNA_water_SEM)
# PCH allocation for biogeo
biogeoShapes<-c(15,17,16,18,8,9,10,4,3)
names(biogeoShapes)<-c("Polar","Polar-Temperate","Polar-Tropical","Temperate","Temperate-Tropical","Tropical","Cosmopolitan","Unallocated","NA")
indic_substrate <- read_excel("../supplementary_tables/GE_IC_indicspecies.xlsx", sheet="substrate")
indic_phyto_ice <- long_phyto_ice %>%
group_by(asv_code) %>%
summarize(total_reads=sum(n_reads)) %>%
arrange(desc(total_reads))
indic_phyto_ice <- left_join(indic_phyto_ice, taxa, by="asv_code")
indic_phyto_ice$substrate <- "ice"
indic_phyto_ice <- left_join(indic_phyto_ice, indic_substrate, by=c("asv_code","substrate"))
indic_phyto_water <- long_phyto_water %>%
group_by(asv_code) %>%
summarize(total_reads=sum(n_reads)) %>%
arrange(desc(total_reads))
indic_phyto_water <- left_join(indic_phyto_water, taxa, by="asv_code")
indic_phyto_water$substrate <- "water"
indic_phyto_water <- left_join(indic_phyto_water, indic_substrate, by=c("asv_code","substrate"))
indic_substrate_top<-rbind(indic_phyto_ice[1:20,],indic_phyto_water[1:20,])
# How much of the reads do the top 20 ASVs represent in their respective groupings
sum(indic_phyto_ice$total_reads[1:20])/sum(indic_phyto_ice$total_reads)
sum(indic_phyto_water$total_reads[1:20])/sum(indic_phyto_water$total_reads)
indic_substrate_top$species<-gsub("_"," ",indic_substrate_top$species)
indic_substrate_plot <- lollipop_chart(indic_substrate_top,asv_code,total_reads,facet=substrate, color=division, pch=biogeo,line_size=0.5, point_size=7) +
theme_bw() +
theme(text=element_text(size=24),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.text.y = element_text(size=20,family="Courier", face = ifelse(as.numeric(indic_substrate_top$PR2_matches)>0, "bold", "plain")),
axis.title = element_blank(),
legend.position="top",
legend.spacing.y=unit(2,"lines"),
legend.key.size = unit(2,"lines"),
legend.text = element_text(margin = margin(r=1,unit="cm")),
panel.grid=element_blank(),
panel.spacing.x=unit(2, "lines"),
strip.background=element_blank(),
panel.background = element_rect(fill="white")) +
scale_y_log10(limits=c(1e3,3162277), expand = c(0, 0), breaks = scales::trans_breaks("log10", function(x) 10^x),labels = scales::trans_format("log10", scales::math_format(10^.x))) +
geom_text(aes(x=asv_code,y=total_reads,label=species),size=8,hjust=0, nudge_y=0.07,show.legend = FALSE,fontface="italic",family="Helvetica") +
geom_text(aes(x=asv_code,y=total_reads,label=sig),size=8,vjust=-0.4,show.legend = FALSE) +
guides(color=guide_legend(ncol=1, title.position = "top"), shape=guide_legend(ncol=1,title.position="top")) +
scale_color_manual(values=treePalette, name="Division") +
scale_shape_manual(values=biogeoShapes, name="Biogeographic Distribution", breaks=c("Polar","Polar-Temperate","Cosmopolitan","Unallocated"))
indic_substrate_plot
pdf("../main_figures/indicatorASV_substrate.pdf", height=22, width=24); plot(indic_substrate_plot); dev.off()
indic_bloom_cluster <- read_excel("../supplementary_tables/GE_IC_indicspecies.xlsx", sheet="bloom_cluster")
long_phyto_Stage_I <- subset(long,bloom_cluster=="Stage_I")
long_phyto_Stages_II_and_III <- subset(long,bloom_cluster=="Stages_II_and_III")
indic_phyto_Stage_I <- long_phyto_Stage_I %>%
group_by(asv_code) %>%
summarize(total_reads=sum(n_reads)) %>%
arrange(desc(total_reads))
indic_phyto_Stage_I <- left_join(indic_phyto_Stage_I, taxa, by="asv_code")
indic_phyto_Stage_I$bloom_cluster <- "Stage_I"
indic_phyto_Stage_I <- left_join(indic_phyto_Stage_I, indic_bloom_cluster, by=c("asv_code","bloom_cluster"))
indic_phyto_Stages_II_and_III <- long_phyto_Stages_II_and_III %>%
group_by(asv_code) %>%
summarize(total_reads=sum(n_reads)) %>%
arrange(desc(total_reads))
indic_phyto_Stages_II_and_III <- left_join(indic_phyto_Stages_II_and_III, taxa, by="asv_code")
indic_phyto_Stages_II_and_III$bloom_cluster <- "Stages_II_and_III"
indic_phyto_Stages_II_and_III <- left_join(indic_phyto_Stages_II_and_III, indic_bloom_cluster, by=c("asv_code","bloom_cluster"))
indic_bloom_cluster_top<-rbind(indic_phyto_Stage_I[1:20,],indic_phyto_Stages_II_and_III[1:20,])
# How much of the reads do the top 20 ASVs represent in their respective groupings
sum(indic_phyto_Stage_I$total_reads[1:20])/sum(indic_phyto_ice$total_reads)
sum(indic_phyto_Stages_II_and_III$total_reads[1:20])/sum(indic_phyto_water$total_reads)
indic_bloom_cluster_top$species<-gsub("_"," ",indic_bloom_cluster_top$species)
indic_bloom_cluster_plot<-lollipop_chart(indic_bloom_cluster_top,asv_code,total_reads,facet=bloom_cluster, color=division, pch=biogeo,line_size=0.5, point_size=7) +
theme_bw() +
ylab("Total number of DNA reads") +
theme(text=element_text(size=24),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.text.y = element_text(size=20,family="Courier", face = ifelse(as.numeric(indic_substrate_top$PR2_matches)>0, "bold", "plain")),
axis.title.y = element_blank(),
legend.position="top",
legend.spacing.y=unit(2,"lines"),
legend.key.size = unit(2,"lines"),
legend.text = element_text(margin = margin(r=1,unit="cm")),
panel.grid=element_blank(),
panel.spacing.x=unit(2, "lines"),
strip.background=element_blank(),
panel.background = element_rect(fill="white")) +
scale_y_log10(limits=c(1e3,3162277), expand = c(0, 0), breaks = scales::trans_breaks("log10", function(x) 10^x),labels = scales::trans_format("log10", scales::math_format(10^.x))) +
geom_text(aes(x=asv_code,y=total_reads,label=species),size=8,hjust=0, nudge_y=0.07,show.legend = FALSE,fontface="italic",family="Helvetica") +
geom_text(aes(x=asv_code,y=total_reads,label=sig),size=8,vjust=-0.4,show.legend = FALSE) +
guides(color=guide_legend(ncol=1, title.position = "top"), shape=guide_legend(ncol=1,title.position="top")) +
scale_color_manual(values=treePalette, name="Division") +
scale_shape_manual(values=biogeoShapes, name="Biogeographic Distribution", breaks=c("Polar","Polar-Temperate","Cosmopolitan","Unallocated"))
indic_bloom_cluster_plot
pdf("../main_figures/indicatorASV_bloom_cluster.pdf", height=22, width=24); plot(indic_bloom_cluster_plot); dev.off()
pdf("../main_figures/indicatorASV_substrate.pdf", height=20, width=24); plot(indic_substrate_plot); dev.off()
pdf("../main_figures/indicatorASV_bloom_cluster.pdf", height=20, width=24); plot(indic_bloom_cluster_plot); dev.off()
knitr::opts_chunk$set(echo = FALSE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Ecosystems (coastal and marine)
# substrate (ice and water)
# depths (under-ice, surface, euphotic, composite)
# size fraction (all)
# dataset version 2.0, metapr2 1.0.4
metaPR2_coastal <-readRDS("./metapr2_phyloseq_Eukaryota_2022-11-28_coastal.rds")
metaPR2_oceanic <-readRDS("./metapr2_phyloseq_Eukaryota_2022-11-28_oceanic.rds")
metaPR2 <- merge_phyloseq(metaPR2_coastal,metaPR2_oceanic)
# 30026 ASVs
# 2874 samples
metaPR2_otus <- data.frame(otu_table(metaPR2))
metaPR2_taxa <- data.frame(tax_table(metaPR2))
metaPR2_samples <- data.frame(sample_data(metaPR2))
row.names(metaPR2_samples) <- gsub("-",".",row.names(metaPR2_samples))
colnames(metaPR2_otus) <- gsub("X","",colnames(metaPR2_otus))
testsamples<-as.data.frame(colnames(metaPR2_otus))
metaPR2_taxa <- metaPR2_taxa %>% rownames_to_column("casv_code")
metaPR2_samples$region <- ifelse(metaPR2_samples$latitude>=66, "Arctic",
ifelse(metaPR2_samples$latitude>=23, "N_Temperate",
ifelse(metaPR2_samples$latitude>-23,"Tropical",
ifelse(metaPR2_samples$latitude>-66,"S_Temperate","Antarctic"))))
sample_info <- read_excel("./metapr2_datasets_Eukaryota_2022-11-28_coastal_oceanic/samples.xlsx") %>% select(file_code,longitude)
sample_info$file_code <- gsub("-",".",sample_info$file_code)
metaPR2_samples <-  metaPR2_samples %>% rownames_to_column("file_code")
metaPR2_samples <- left_join(metaPR2_samples,sample_info,by="file_code")
otu_df <- metaPR2_otus %>% rownames_to_column(var = "casv_code") %>%
pivot_longer(cols = -casv_code,
names_to = "file_code",
values_to = "n_reads",
values_drop_na = TRUE) %>%
filter(n_reads != 0) %>%
filter(!is.na(n_reads))
taxo_df <- metaPR2_taxa
long_test <- left_join(otu_df,taxo_df)
metadata_df <- metaPR2_samples
long_meta <- left_join(long_test, metadata_df, by = c("file_code"))
metaPR2_samples_count <- metaPR2_samples %>%
group_by(region) %>%
count()
#group samples by latlong to count time series as one occurence only.
long_meta$latlong <- str_c(long_meta$latitude,long_meta$longitude,sep=",")
write.csv(long_meta, gzfile("./metapr2_long.csv.gz"))
long_meta<-read.csv(gzfile("./metapr2_long.csv.gz"))
collapse_timeseries <- long_meta %>%
group_by(casv_code,region,latlong) %>%
summarize(n_reads=sum(n_reads))
biogeo_casv_metapr2 <- collapse_timeseries %>%
group_by(casv_code,region) %>%
count() %>%
pivot_wider(names_from=region,values_from=n,values_fill=0) %>%
as.data.frame()
#Remove if the ASV has less than 5 samples in a band
biogeo_casv_metapr2[,-1][biogeo_casv_metapr2[,-1]<5] <- 0
biogeo_casv_metapr2 <- biogeo_casv_metapr2 %>%
mutate(n=rowSums(across(where(is.numeric)))) %>%
filter(n>=5)
biogeo_casv_metapr2 <- biogeo_casv_metapr2 %>%
mutate(Arctic_pct=Arctic/n) %>%
mutate(N_Temperate_pct=N_Temperate/n) %>%
mutate(Tropical_pct=Tropical/n) %>%
mutate(S_Temperate_pct=S_Temperate/n) %>%
mutate(Antarctic_pct=Antarctic/n) %>%
mutate(Temperate_pct=S_Temperate_pct+N_Temperate_pct) %>%
mutate(Polar_pct=Arctic_pct+Antarctic_pct)
biogeo <- biogeo_casv_metapr2
biogeo$biogeo<- ifelse(biogeo$Polar_pct>=0.9, "Polar",
ifelse(biogeo$Temperate_pct>=0.9, "Temperate",
ifelse(biogeo$Tropical_pct>=0.9, "Tropical",
ifelse(biogeo$Temperate_pct+biogeo$Polar_pct>0.9, "Polar-Temperate",
ifelse(biogeo$Tropical_pct+biogeo$Temperate_pct>0.9, "Temperate-Tropical", "Cosmopolitan")))))
biogeo$biogeo<- ifelse(biogeo$Polar_pct>=0.05 & biogeo$Temperate_pct>=0.05 & biogeo$Tropical_pct>=0.05, "Cosmopolitan", biogeo$biogeo)
count <- biogeo %>% group_by(biogeo) %>% count()
write.csv(biogeo,"./biogeo_casv.csv")
###
#entire MetaPR2 distribution
###
indic_biogeo <- biogeo %>% select(casv_code)
distribution <- filter(long_meta,casv_code %in% indic_biogeo$casv_code) %>% group_by(casv_code,latlong,latitude,longitude) %>%
summarize(n_reads=sum(n_reads)) %>%
select(casv_code,latitude,longitude)
distribution <- left_join(distribution,biogeo%>%select(casv_code,biogeo),by="casv_code")
distribution <- distribution %>% filter(!is.na(biogeo))
count<-distribution %>% group_by(biogeo) %>% count()
library(ggridges)
theme_set(theme_minimal())
distribution$biogeo <- factor(distribution$biogeo,levels=c("Cosmopolitan","Tropical","Temperate-Tropical","Temperate","Polar-Temperate","Polar"))
density <- ggplot(distribution, aes(x = latitude, y = biogeo)) +
geom_density_ridges(aes(fill = biogeo,alpha=0.5)) +
scale_fill_manual(values=biogeoPalette) +
theme(legend.position = "none", axis.ticks.x = element_blank(), panel.grid=element_blank()) + scale_x_continuous(breaks=c(-66,-23,0,23,66)) +
geom_vline(xintercept = c(23,-23,66,-66), linetype="dotted",alpha=0.7)
density
#pdf("../main_figures/metaPR2_biogeo_density.pdf", height=7, width=8); plot(density); dev.off()
# import world map
world <- map_data("world")
plot_world <- metaPR2_samples %>%
select(file_code,latitude,longitude,region)
plot_world$biogeo<-ifelse(plot_world$region=="N_Temperate" | plot_world$region=="S_Temperate", "Temperate",
ifelse(plot_world$region=="Arctic" | plot_world$region=="Antarctic", "Polar",
"Tropical"))
plot_map_ortho<-ggplot() +
geom_map(data=world, map=world, aes(long,lat,map_id=region), color="grey80", fill="#F2F2F2") +
scale_x_continuous(breaks = seq(-180, 180, by = 10)) +
scale_y_continuous(breaks= seq(0,90, by=10)) +
geom_hline(yintercept=66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=23, color="#D55E00", linetype="dashed") +
geom_point(data=plot_world,
mapping=aes(x=longitude,y=latitude,color=biogeo),
show.legend = FALSE,size=1.5,alpha=0.6) +
scale_color_manual(values=biogeoPalette,breaks=c("Polar","Temperate","Tropical")) +
coord_map("ortho", ylim=c(30,90)) +
theme(axis.text=element_blank(), #remove axis labels
axis.ticks=element_blank(), #remove axis ticks
axis.title=element_blank(), # remove axis title
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.background = element_rect(fill="#cdebf9"),
panel.grid=element_line(size=0.4)) # long and lat line size
plot_map_ortho
plot_map_world<-ggplot() +
geom_map(data=world,
map=world,
aes(long,lat,map_id=region),
color="grey80", fill="#F2F2F2") +
geom_hline(yintercept=66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=23, color="#D55E00", linetype="dashed") +
geom_hline(yintercept=-66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=-23, color="#D55E00", linetype="dashed") +
geom_point(data=plot_world,
mapping=aes(x=longitude,y=latitude,color=biogeo),
show.legend = TRUE,size=1.5,alpha=0.7) +
scale_color_manual(values=biogeoPalette,breaks=c("Polar","Temperate","Tropical"),name="Region") +
theme(axis.text=element_blank(), #remove axis labels
axis.ticks=element_blank(), #remove axis ticks
axis.title=element_blank(), # remove axis title
legend.text = element_text(margin = margin(r=1,unit="cm")),
legend.position="bottom",
legend.title=element_blank(),
text=element_text(size=16),
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.background = element_rect(fill="#cdebf9"),
panel.grid=element_line(size=0)) # long and lat line size
plot_map_world
pdf("../supplementary_figures/supplementary_metaPR2_samples.pdf", height=6, width=14) ; plot(plot_map_ortho+plot_map_world); dev.off()
pdf("./supplementary_figures/supplementary_metaPR2_samples.pdf", height=6, width=14) ; plot(plot_map_ortho+plot_map_world); dev.off()
pdf("../supplementary_figures/supplementary_metaPR2_samples.pdf", height=6, width=14) ; plot(plot_map_ortho+plot_map_world); dev.off()
plot_map_world
pdf("../supplementary_figures/supplementary_metaPR2_samples.pdf", height=6, width=14) ; plot(plot_map_ortho+plot_map_world); dev.off()
pdf("../../supplementary_figures/supplementary_metaPR2_samples.pdf", height=6, width=14) ; plot(plot_map_ortho+plot_map_world); dev.off()
#occurrence only, dont count proportion of reads within its sample
indic_biogeo <- read.csv("../supplementary_tables/photosynthetic_ASVs_TAXONtable.csv") %>%
select(casv_code)
#occurrence only, dont count proportion of reads within its sample
indic_biogeo <- read.csv("../../supplementary_tables/photosynthetic_ASVs_TAXONtable.csv") %>%
select(casv_code)
distribution <- filter(long_meta,casv_code %in% indic_biogeo$casv_code) %>% group_by(casv_code,latlong,latitude,longitude) %>%
summarize(n_reads=sum(n_reads)) %>%
select(casv_code,latitude,longitude)
distribution <- left_join(distribution,biogeo%>%select(casv_code,biogeo),by="casv_code")
distribution <- distribution %>% filter(!is.na(biogeo))
count <- left_join(indic_biogeo,biogeo%>%select(casv_code,biogeo),by="casv_code")
count<-count %>% group_by(biogeo) %>% count()
theme_set(theme_minimal())
distribution$biogeo <- factor(distribution$biogeo,levels=c("Cosmopolitan","Tropical","Temperate-Tropical","Temperate","Polar-Temperate","Polar"))
#filter away counts that are less than 5 in the latitudinal zone
distribution_filtered <- distribution %>%
left_join(biogeo_casv_metapr2,by="casv_code")
distribution_filtered$remove <- ifelse(distribution_filtered$latitude>=66 & distribution_filtered$Arctic==0, "remove",
ifelse(distribution_filtered$latitude<66 & distribution_filtered$latitude>=23 & distribution_filtered$N_Temperate==0,"remove",
ifelse(distribution_filtered$latitude<23 & distribution_filtered$latitude>-23 & distribution_filtered$Tropical==0,"remove",
ifelse(distribution$latitude<=-23 & distribution_filtered$latitude>-66 & distribution_filtered$S_Temperate==0,"remove",
ifelse(distribution_filtered$latitude<=-66 & distribution_filtered$Antarctic==0,"remove","stay")))))
distribution_filtered <- distribution_filtered %>%
filter(remove=="stay") %>%
select(casv_code,latitude,longitude,biogeo) %>%
left_join(count,by="biogeo") %>%
mutate(biogeo_label=str_c(biogeo,"\n (N = ",n,")")) %>%
mutate(biogeo_label=factor(biogeo_label,levels=c("Cosmopolitan\n (N = 22)",
"Temperate\n (N = 8)",
"Polar-Temperate\n (N = 94)",
"Polar\n (N = 136)")))
density <- ggplot(distribution_filtered, aes(x = latitude, y = biogeo_label)) +
geom_density_ridges(aes(fill = biogeo,alpha=0.5)) +
scale_fill_manual(values=biogeoPalette) +
theme(legend.position = "none",
axis.ticks.x = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank()) +
scale_x_continuous(breaks=c(-66,-23,0,23,66)) +
geom_vline(xintercept = c(23,-23,66,-66), linetype="dotted",alpha=0.7)
density
pdf("../../main_figures/biogeo_density.pdf", height=5, width=8); plot(density); dev.off()
View(count)
distribution_filtered <- distribution_filtered %>%
filter(remove=="stay") %>%
select(casv_code,latitude,longitude,biogeo) %>%
left_join(count,by="biogeo") %>%
mutate(biogeo_label=str_c(biogeo,"\n (N = ",n,")")) %>%
mutate(biogeo_label=factor(biogeo_label,levels=c("Cosmopolitan\n (N = 11)",
"Temperate\n (N = 6)",
"Polar-Temperate\n (N = 68)",
"Polar\n (N = 115)")))
#occurrence only, dont count proportion of reads within its sample
indic_biogeo <- read.csv("../../supplementary_tables/photosynthetic_ASVs_TAXONtable.csv") %>%
select(casv_code)
distribution <- filter(long_meta,casv_code %in% indic_biogeo$casv_code) %>% group_by(casv_code,latlong,latitude,longitude) %>%
summarize(n_reads=sum(n_reads)) %>%
select(casv_code,latitude,longitude)
distribution <- left_join(distribution,biogeo%>%select(casv_code,biogeo),by="casv_code")
distribution <- distribution %>% filter(!is.na(biogeo))
count <- left_join(indic_biogeo,biogeo%>%select(casv_code,biogeo),by="casv_code")
count<-count %>% group_by(biogeo) %>% count()
theme_set(theme_minimal())
distribution$biogeo <- factor(distribution$biogeo,levels=c("Cosmopolitan","Tropical","Temperate-Tropical","Temperate","Polar-Temperate","Polar"))
#filter away counts that are less than 5 in the latitudinal zone
distribution_filtered <- distribution %>%
left_join(biogeo_casv_metapr2,by="casv_code")
distribution_filtered$remove <- ifelse(distribution_filtered$latitude>=66 & distribution_filtered$Arctic==0, "remove",
ifelse(distribution_filtered$latitude<66 & distribution_filtered$latitude>=23 & distribution_filtered$N_Temperate==0,"remove",
ifelse(distribution_filtered$latitude<23 & distribution_filtered$latitude>-23 & distribution_filtered$Tropical==0,"remove",
ifelse(distribution$latitude<=-23 & distribution_filtered$latitude>-66 & distribution_filtered$S_Temperate==0,"remove",
ifelse(distribution_filtered$latitude<=-66 & distribution_filtered$Antarctic==0,"remove","stay")))))
distribution_filtered <- distribution_filtered %>%
filter(remove=="stay") %>%
select(casv_code,latitude,longitude,biogeo) %>%
left_join(count,by="biogeo") %>%
mutate(biogeo_label=str_c(biogeo,"\n (N = ",n,")")) %>%
mutate(biogeo_label=factor(biogeo_label,levels=c("Cosmopolitan\n (N = 11)",
"Temperate\n (N = 6)",
"Polar-Temperate\n (N = 68)",
"Polar\n (N = 115)")))
density <- ggplot(distribution_filtered, aes(x = latitude, y = biogeo_label)) +
geom_density_ridges(aes(fill = biogeo,alpha=0.5)) +
scale_fill_manual(values=biogeoPalette) +
theme(legend.position = "none",
axis.ticks.x = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank()) +
scale_x_continuous(breaks=c(-66,-23,0,23,66)) +
geom_vline(xintercept = c(23,-23,66,-66), linetype="dotted",alpha=0.7)
density
pdf("../../main_figures/biogeo_density.pdf", height=5, width=8); plot(density); dev.off()
