write.csv(phyto_otus, "../supplementary_tables/photosynthetic_ASVs_OTUtable.csv")
#calculating ASV reads in ice and water
sum_ice_reads <- long_phyto_ice %>%
group_by(asv_code) %>%
summarize(sum_ice_reads=sum(n_reads))
sum_water_reads <- long_phyto_water %>%
group_by(asv_code) %>%
summarize(sum_water_reads=sum(n_reads))
phyto_taxa <- data.frame(tax_table(ps_phyto_DNA)) %>%
rownames_to_column("asv_code")
phyto_taxa <- phyto_taxa %>%
left_join(sum_ice_reads, by="asv_code") %>%
mutate(sum_ice_reads = coalesce(sum_ice_reads, 0)) %>%
left_join(sum_water_reads, by="asv_code") %>%
mutate(sum_water_reads = coalesce(sum_water_reads, 0)) %>%
mutate(sum_reads = sum_ice_reads + sum_water_reads) %>%
arrange(desc(sum_reads))
write.csv(phyto_taxa, "../supplementary_tables/photosynthetic_ASVs_TAXONtable.csv")
phyto_samples <- data.frame(sample_data(ps_phyto_DNA))
write.csv(phyto_samples, "../supplementary_tables/photosynthetic_ASVs_SAMPLEtable.csv")
# add biogeo to ASVs
biogeo <- read.csv("../R_ice_camp/biogeoraphy_assignment_metaPR2/biogeo_casv.csv") %>%
select(-X)
phyto_biogeo <- left_join(phyto_taxa %>% select(asv_code, casv_code), biogeo, by="casv_code") %>%
na.omit()
write.csv(phyto_biogeo, "../supplementary_tables/photosynthetic_ASVs_BIOGEOtable.csv")
total_ice_phyto_reads <- sum(long_phyto_ice$n_reads)
DNA_ice_SEM <- long_phyto_ice %>%
mutate(across(domain_boot:species_boot,as.numeric)) %>%
filter(class %in% c("Bacillariophyceae","Mediophyceae"), genus_boot>=80) %>%
group_by(genus,species,asv_code) %>%
summarise(n_reads=sum(n_reads)) %>%
group_by(genus,species) %>%
summarise(n_reads=sum(n_reads), Nasv=n()) %>%
mutate(pct_reads = (n_reads/total_ice_phyto_reads)*100)
xtable(DNA_ice_SEM)
total_water_phyto_reads <- sum(long_phyto_water$n_reads)
DNA_water_SEM <- long_phyto_water %>%
mutate(across(domain_boot:species_boot,as.numeric)) %>%
filter(class %in% c("Bacillariophyceae","Mediophyceae"), genus_boot>=80) %>%
group_by(genus,species,asv_code) %>%
summarise(n_reads=sum(n_reads)) %>%
group_by(genus,species) %>%
summarise(n_reads=sum(n_reads), Nasv=n()) %>%
mutate(pct_reads = (n_reads/total_water_phyto_reads)*100) %>%
select(-n_reads)
xtable(DNA_water_SEM)
microdiversity_asvs <- c("Baffinella_frigidus",
"Thalassiosira_nordenskioeldii",
"Navicula_sp.")
mapPalette<-c("#0072B2","#E69F00","#555555")
names(mapPalette)<-c("Polar","Polar-Temperate","Unallocated")
# import world map
world <- map_data("world")
#distribution of samples from metaPR2
long_meta <- read.csv("./biogeoraphy_assignment_metaPR2/metapr2_long.csv.gz")
for(i in microdiversity_asvs) {
species <- long %>%
filter(species==i) %>%
filter(asv_code %in% indic_substrate_top$asv_code | asv_code %in% indic_bloom_cluster_top$asv_code) %>%
group_by(asv_code,date,substrate,biogeo) %>%
summarize(n_reads=sum(n_reads)) %>%
mutate(asv_code=str_c(biogeo,"\n(",asv_code,")")) %>%
filter(n_reads!=0)
species_order <- species %>%
group_by(asv_code,biogeo) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(biogeo)) #Plots polar-temperate first, so polar points appear on top overlapping
species$asv_code <- factor(species$asv_code, levels=species_order$asv_code)
plot_time <-  ggplot(species, aes(x=date, y=n_reads)) +
geom_bar(position="stack",stat="identity", color="black",aes(fill=biogeo)) +
theme_bw() +
scale_fill_manual(values=mapPalette, labels=rev(species_order$asv_code)) +
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(),
legend.justification = "right",
legend.text = element_text(margin = margin(r=1.5,unit="cm")),
legend.key.size=unit(2,"line"),
legend.position="bottom",
legend.title = element_blank(),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
panel.grid = element_blank(),
strip.background=element_blank()) +
ggtitle(str_c(i," ASVs"))  +
ylab("No. of reads") +
facet_grid(rows=vars(substrate),scales="free_x")
plot_time
species <- long %>%
filter(species==i) %>%
group_by(asv_code,casv_code,biogeo) %>%
summarize(n_reads=sum(n_reads)) %>%
select(asv_code,casv_code,biogeo)
list<-species$casv_code
species_distribution <- long_meta %>%
filter(casv_code %in% list) %>%
left_join(species,by="casv_code") %>%
mutate(asv_code=str_c(asv_code,"\n(",biogeo,")")) %>%
arrange(desc(biogeo)) #Plots polar-temperate first, so polar points appear on top overlapping
plot_map_ortho<-ggplot() +
geom_map(data=world,
map=world,
aes(long,lat,map_id=region),
color="grey80", fill="#F2F2F2") +
scale_x_continuous(breaks = seq(-180, 180, by = 10)) +
scale_y_continuous(breaks= seq(0,90, by=10)) +
geom_hline(yintercept=66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=23, color="#D55E00", linetype="dashed") +
geom_point(data=species_distribution,
mapping=aes(x=longitude,y=latitude,color=biogeo),
show.legend = FALSE,size=3,alpha=0.7) +
scale_color_manual(values=mapPalette) +
coord_map("ortho", ylim=c(30,90)) +
theme(axis.text=element_blank(), #remove axis labels
axis.ticks=element_blank(), #remove axis ticks
axis.title=element_blank(), # remove axis title
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.background = element_rect(fill="#cdebf9"),
panel.grid=element_line(size=0.4)) # long and lat line size
plot_map_ortho
plot_map_world<-ggplot() +
geom_map(data=world,
map=world,
aes(long,lat,map_id=region),
color="grey80", fill="#F2F2F2") +
geom_hline(yintercept=66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=23, color="#D55E00", linetype="dashed") +
geom_hline(yintercept=-66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=-23, color="#D55E00", linetype="dashed") +
geom_point(data=species_distribution,
mapping=aes(x=longitude,y=latitude,color=biogeo),
show.legend = FALSE,size=3,alpha=0.7) +
scale_color_manual(values=mapPalette) +
theme(axis.text=element_blank(), #remove axis labels
axis.ticks=element_blank(), #remove axis ticks
axis.title=element_blank(), # remove axis title
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.background = element_rect(fill="#cdebf9"),
panel.grid=element_line(size=0)) # long and lat line size
plot_map_world
pdf(str_c("../main_figures/ASV_",i,".pdf"), height=8, width=24) ; plot(plot_time+plot_map_ortho+plot_map_world); dev.off()
}
sum(phyto_species_rank$n_reads[1:23])/sum(phyto_species_rank$n_reads)
top_phyto_species <- phyto_species_rank$species[1:23]
#normalise entire study's top20 photosynthetic species again
ps_photo_plot <- ps %>%
subset_taxa(trophic_mode %in% c("photosynthetic","mixotrophic")) %>%
subset_taxa(species %in% top_phyto_species)
ps_photo_plot <- phyloseq_normalize_median(ps_photo_plot)
ps_photo_plot <- phyloseq_transform_to_long(ps_photo_plot)
ps_photo_plot <- filter(ps_photo_plot,is.na(fraction_name)=="FALSE")
normalised_reads <- round(sum(ps_photo_plot$n_reads)/length(unique(ps_photo_plot$sample_name)))
plot_phyto <- ps_photo_plot %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
label <- phyto_colors %>% select(species, label)
#to create labels to label species that has at least 10% of reads
labels <- plot_phyto %>%
filter(n_reads>=0.10*normalised_reads) %>%
left_join(label,by="species") %>%
select(sample_name,species,date,depth_level,fraction_name,label)
plot_phyto <- plot_phyto %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
plot_phyto <- left_join(plot_phyto,labels,by=c("sample_name","species","date","depth_level","fraction_name"))
#black and white labels generated separately
plot_phyto$label_white <- ifelse(plot_phyto$label %in% c("Cr","Pp","Pel","P1","P2","P3","P4","C4","C5","C6","C7"), plot_phyto$label, NA)
plot_phyto$label_black <- ifelse(plot_phyto$label %in% c("Mp","Bf","Pa","An","P5","P6","P7","P8","P9","C1","C2","C3"), plot_phyto$label, NA)
#reorganising the data to plot nicely
plot_phyto$species <- factor(plot_phyto$species,levels=phyto_colors$species)
plot_phyto$fraction_name<-factor(plot_phyto$fraction_name, levels=c("pico", "nano", "micro"))
plot_phyto$depth_level<-factor(plot_phyto$depth_level, levels=c("ICE_1","ICE_0", "WATER_1","WATER_2", "WATER_3", "WATER_4"))
plot_phyto$date<-str_replace(plot_phyto$date,"2016-05-","May ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-06-","Jun ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-07-","Jul ")
plot_phyto$date <- factor(plot_phyto$date, levels=sampling_dates_plot)
p_species <- ggplot(plot_phyto, aes(x=date, y=n_reads,fill=species)) +
geom_bar(position="fill", stat="identity",color="black",size=0.5) + theme_bw()+
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.justification = "top",
legend.spacing.y=unit(1,'cm'),
panel.background = element_rect(fill="white"),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid = element_blank(),
strip.background=element_blank(),
legend.text = element_text(face="italic"),
legend.key.size=unit(2,"line")) +
guides(fill=guide_legend(ncol=1)) +
ylab("Proportion of reads") +
geom_text(aes(x=date,y=n_reads,label=label_black,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="black") +
geom_text(aes(x=date,y=n_reads,label=label_white,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="white") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
scale_color_manual(values=phytoPalette) + scale_fill_manual(values=phytoPalette) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x")
p_species
brewer.pal("PiYG")
brewer.pal(12,"PiYG")
#Read color allocation for plots
source("../R_ice_camp/GE_IC_color.R")
p_species <- ggplot(plot_phyto, aes(x=date, y=n_reads,fill=species)) +
geom_bar(position="fill", stat="identity",color="black",size=0.5) + theme_bw()+
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.justification = "top",
legend.spacing.y=unit(1,'cm'),
panel.background = element_rect(fill="white"),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid = element_blank(),
strip.background=element_blank(),
legend.text = element_text(face="italic"),
legend.key.size=unit(2,"line")) +
guides(fill=guide_legend(ncol=1)) +
ylab("Proportion of reads") +
geom_text(aes(x=date,y=n_reads,label=label_black,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="black") +
geom_text(aes(x=date,y=n_reads,label=label_white,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="white") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
scale_color_manual(values=phytoPalette) + scale_fill_manual(values=phytoPalette) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x")
p_species
#Read color allocation for plots
source("../R_ice_camp/GE_IC_color.R")
View(phyto_species_rank)
#Read color allocation for plots
source("../R_ice_camp/GE_IC_color.R")
phyto_species_rank <-long %>%
group_by(species) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(n_reads))
sum(phyto_species_rank$n_reads[1:23])/sum(phyto_species_rank$n_reads)
top_phyto_species <- phyto_species_rank$species[1:23]
#normalise entire study's top20 photosynthetic species again
ps_photo_plot <- ps %>%
subset_taxa(trophic_mode %in% c("photosynthetic","mixotrophic")) %>%
subset_taxa(species %in% top_phyto_species)
ps_photo_plot <- phyloseq_normalize_median(ps_photo_plot)
ps_photo_plot <- phyloseq_transform_to_long(ps_photo_plot)
ps_photo_plot <- filter(ps_photo_plot,is.na(fraction_name)=="FALSE")
# normalization removed ASVs with very low reads
normalised_reads <- round(sum(ps_photo_plot$n_reads)/length(unique(ps_photo_plot$sample_name)))
plot_phyto <- ps_photo_plot %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
label <- phyto_colors %>% select(species, label)
#to create labels to label species that has at least 10% of reads
labels <- plot_phyto %>%
filter(n_reads>=0.10*normalised_reads) %>%
left_join(label,by="species") %>%
select(sample_name,species,date,depth_level,fraction_name,label)
plot_phyto <- plot_phyto %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
plot_phyto <- left_join(plot_phyto,labels,by=c("sample_name","species","date","depth_level","fraction_name"))
#black and white labels generated separately
plot_phyto$label_white <- ifelse(plot_phyto$label %in% c("Cr","Pp","Pel","P1","P2","P3","P4","C4","C5","C6","C7"), plot_phyto$label, NA)
plot_phyto$label_black <- ifelse(plot_phyto$label %in% c("Mp","Bf","Pa","An","P5","P6","P7","P8","P9","C1","C2","C3"), plot_phyto$label, NA)
#reorganising the data to plot nicely
plot_phyto$species <- factor(plot_phyto$species,levels=phyto_colors$species)
plot_phyto$fraction_name<-factor(plot_phyto$fraction_name, levels=c("pico", "nano", "micro"))
plot_phyto$depth_level<-factor(plot_phyto$depth_level, levels=c("ICE_1","ICE_0", "WATER_1","WATER_2", "WATER_3", "WATER_4"))
plot_phyto$date<-str_replace(plot_phyto$date,"2016-05-","May ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-06-","Jun ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-07-","Jul ")
plot_phyto$date <- factor(plot_phyto$date, levels=sampling_dates_plot)
p_species <- ggplot(plot_phyto, aes(x=date, y=n_reads,fill=species)) +
geom_bar(position="fill", stat="identity",color="black",size=0.5) + theme_bw()+
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.justification = "top",
legend.spacing.y=unit(1,'cm'),
panel.background = element_rect(fill="white"),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid = element_blank(),
strip.background=element_blank(),
legend.text = element_text(face="italic"),
legend.key.size=unit(2,"line")) +
guides(fill=guide_legend(ncol=1)) +
ylab("Proportion of reads") +
geom_text(aes(x=date,y=n_reads,label=label_black,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="black") +
geom_text(aes(x=date,y=n_reads,label=label_white,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="white") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
scale_color_manual(values=phytoPalette) + scale_fill_manual(values=phytoPalette) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x")
p_species
pdf("../main_figures/phyto_species.pdf", height=20, width=18) ; plot(p_species) ; dev.off()
brewer.pal(12,"PiYG")
phyto_species_rank <-long %>%
group_by(species) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(n_reads))
sum(phyto_species_rank$n_reads[1:23])/sum(phyto_species_rank$n_reads)
top_phyto_species <- phyto_species_rank$species[1:23]
#normalise entire study's top20 photosynthetic species again
ps_photo_plot <- ps %>%
subset_taxa(trophic_mode %in% c("photosynthetic","mixotrophic")) %>%
subset_taxa(species %in% top_phyto_species)
ps_photo_plot <- phyloseq_normalize_median(ps_photo_plot)
ps_photo_plot <- phyloseq_transform_to_long(ps_photo_plot)
ps_photo_plot <- filter(ps_photo_plot,is.na(fraction_name)=="FALSE")
# normalization removed ASVs with very low reads
normalised_reads <- round(sum(ps_photo_plot$n_reads)/length(unique(ps_photo_plot$sample_name)))
plot_phyto <- ps_photo_plot %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
label <- phyto_colors %>% select(species, label)
#to create labels to label species that has at least 10% of reads
labels <- plot_phyto %>%
filter(n_reads>=0.10*normalised_reads) %>%
left_join(label,by="species") %>%
select(sample_name,species,date,depth_level,fraction_name,label)
plot_phyto <- plot_phyto %>%
group_by(sample_name,species,date,depth_level,fraction_name) %>%
summarize(n_reads=sum(n_reads))
plot_phyto <- left_join(plot_phyto,labels,by=c("sample_name","species","date","depth_level","fraction_name"))
#black and white labels generated separately
plot_phyto$label_white <- ifelse(plot_phyto$label %in% c("Cr","Pp","Pe","P1","P2","P3","P4","C4","C5","C6","C7"), plot_phyto$label, NA)
plot_phyto$label_black <- ifelse(plot_phyto$label %in% c("Mp","Bf","Pa","An","P5","P6","P7","P8","P9","C1","C2","C3"), plot_phyto$label, NA)
#reorganising the data to plot nicely
plot_phyto$species <- factor(plot_phyto$species,levels=phyto_colors$species)
plot_phyto$fraction_name<-factor(plot_phyto$fraction_name, levels=c("pico", "nano", "micro"))
plot_phyto$depth_level<-factor(plot_phyto$depth_level, levels=c("ICE_1","ICE_0", "WATER_1","WATER_2", "WATER_3", "WATER_4"))
plot_phyto$date<-str_replace(plot_phyto$date,"2016-05-","May ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-06-","Jun ")
plot_phyto$date<-str_replace(plot_phyto$date,"2016-07-","Jul ")
plot_phyto$date <- factor(plot_phyto$date, levels=sampling_dates_plot)
p_species <- ggplot(plot_phyto, aes(x=date, y=n_reads,fill=species)) +
geom_bar(position="fill", stat="identity",color="black",size=0.5) + theme_bw()+
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.justification = "top",
legend.spacing.y=unit(1,'cm'),
panel.background = element_rect(fill="white"),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid = element_blank(),
strip.background=element_blank(),
legend.text = element_text(face="italic"),
legend.key.size=unit(2,"line")) +
guides(fill=guide_legend(ncol=1)) +
ylab("Proportion of reads") +
geom_text(aes(x=date,y=n_reads,label=label_black,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="black") +
geom_text(aes(x=date,y=n_reads,label=label_white,vjust=0.5),
position=position_fill(vjust=0.5),
size=3,
show.legend = FALSE,
family="Helvetica",
color="white") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
scale_color_manual(values=phytoPalette) + scale_fill_manual(values=phytoPalette) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x")
p_species
pdf("../main_figures/phyto_species.pdf", height=20, width=18) ; plot(p_species) ; dev.off()
brewer.pal(12,"PiYG")
pdf("../main_figures/indicatorASV_bloom_cluster.pdf", height=18, width=24); plot(indic_bloom_cluster_plot); dev.off()
pdf("../main_figures/indicatorASV_substrate.pdf", height=18, width=24); plot(indic_substrate_plot); dev.off()
View(blast)
#Culturability of ASVs with BLAST against PR2 Culture sequences
blast<-read_tsv("../R_ice_camp/biogeoraphy_assignment_metaPR2/metapr2_usearch_all_cultures.tsv.gz") %>%
filter(pct_id==100) %>%
group_by(hash_value) %>%
count() %>%
rename(asv_code=hash_value, PR2_matches=n)
blast$asv_code<-substr(blast$asv_code,1,10)
#Culturability of ASVs with BLAST against PR2 Culture sequences
blast<-read_tsv("../R_ice_camp/biogeoraphy_assignment_metaPR2/metapr2_usearch_all_cultures.tsv.gz") %>%
filter(pct_id==100)
View(blast)
View(label)
microdiversity_asvs <- c("Baffinella_frigidus",
"Thalassiosira_nordenskioeldii",
"Thalassiosira_aestivalis")
mapPalette<-c("#0072B2","#E69F00","#555555")
names(mapPalette)<-c("Polar","Polar-Temperate","Unallocated")
# import world map
world <- map_data("world")
#distribution of samples from metaPR2
long_meta <- read.csv("./biogeoraphy_assignment_metaPR2/metapr2_long.csv.gz")
for(i in microdiversity_asvs) {
species <- long %>%
filter(species==i) %>%
filter(asv_code %in% indic_substrate_top$asv_code | asv_code %in% indic_bloom_cluster_top$asv_code) %>%
group_by(asv_code,date,substrate,biogeo) %>%
summarize(n_reads=sum(n_reads)) %>%
mutate(asv_code=str_c(biogeo,"\n(",asv_code,")")) %>%
filter(n_reads!=0)
species_order <- species %>%
group_by(asv_code,biogeo) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(biogeo)) #Plots polar-temperate first, so polar points appear on top overlapping
species$asv_code <- factor(species$asv_code, levels=species_order$asv_code)
plot_time <-  ggplot(species, aes(x=date, y=n_reads)) +
geom_bar(position="stack",stat="identity", color="black",aes(fill=biogeo)) +
theme_bw() +
scale_fill_manual(values=mapPalette, labels=rev(species_order$asv_code)) +
theme(text=element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(),
legend.justification = "right",
legend.text = element_text(margin = margin(r=1.5,unit="cm")),
legend.key.size=unit(2,"line"),
legend.position="bottom",
legend.title = element_blank(),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
panel.grid = element_blank(),
strip.background=element_blank()) +
ggtitle(str_c(i," ASVs"))  +
ylab("No. of reads") +
facet_grid(rows=vars(substrate),scales="free_x")
plot_time
species <- long %>%
filter(species==i) %>%
group_by(asv_code,casv_code,biogeo) %>%
summarize(n_reads=sum(n_reads)) %>%
select(asv_code,casv_code,biogeo)
list<-species$casv_code
species_distribution <- long_meta %>%
filter(casv_code %in% list) %>%
left_join(species,by="casv_code") %>%
mutate(asv_code=str_c(asv_code,"\n(",biogeo,")")) %>%
arrange(desc(biogeo)) #Plots polar-temperate first, so polar points appear on top overlapping
plot_map_ortho<-ggplot() +
geom_map(data=world,
map=world,
aes(long,lat,map_id=region),
color="grey80", fill="#F2F2F2") +
scale_x_continuous(breaks = seq(-180, 180, by = 10)) +
scale_y_continuous(breaks= seq(0,90, by=10)) +
geom_hline(yintercept=66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=23, color="#D55E00", linetype="dashed") +
geom_point(data=species_distribution,
mapping=aes(x=longitude,y=latitude,color=biogeo),
show.legend = FALSE,size=3,alpha=0.7) +
scale_color_manual(values=mapPalette) +
coord_map("ortho", ylim=c(30,90)) +
theme(axis.text=element_blank(), #remove axis labels
axis.ticks=element_blank(), #remove axis ticks
axis.title=element_blank(), # remove axis title
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.background = element_rect(fill="#cdebf9"),
panel.grid=element_line(size=0.4)) # long and lat line size
plot_map_ortho
plot_map_world<-ggplot() +
geom_map(data=world,
map=world,
aes(long,lat,map_id=region),
color="grey80", fill="#F2F2F2") +
geom_hline(yintercept=66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=23, color="#D55E00", linetype="dashed") +
geom_hline(yintercept=-66, color="#0072B2", linetype="dashed") +
geom_hline(yintercept=-23, color="#D55E00", linetype="dashed") +
geom_point(data=species_distribution,
mapping=aes(x=longitude,y=latitude,color=biogeo),
show.legend = FALSE,size=3,alpha=0.7) +
scale_color_manual(values=mapPalette) +
theme(axis.text=element_blank(), #remove axis labels
axis.ticks=element_blank(), #remove axis ticks
axis.title=element_blank(), # remove axis title
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.background = element_rect(fill="#cdebf9"),
panel.grid=element_line(size=0)) # long and lat line size
plot_map_world
pdf(str_c("../main_figures/ASV_",i,".pdf"), height=8, width=24) ; plot(plot_time+plot_map_ortho+plot_map_world); dev.off()
}
library(dplyr)
library(readxl)
library(writexl)
# load asv table (downloaded from metaPR2 as asv.xlsx)
asv_table <- read_excel("./asv.xlsx")
