guides(color=guide_legend(ncol=4, title.position = "top"), shape=guide_legend(ncol=1,title.position="top")) +
scale_color_manual(values=classPalette, breaks=unique(indic_substrate_top$class), name="Class") +
scale_shape_manual(values=biogeoShapes, name="Biogeographic Distribution", breaks=c("Polar","Polar-Temperate","Cosmopolitan","Unallocated"))
indic_substrate_plot<-lollipop_chart(indic_substrate_top,asv_code,total_reads,facet=substrate, color=class, pch=biogeo,line_size=0.5, point_size=7) +
theme_bw() +
ylab("Total number of DNA reads of ASVs within substrate") +
theme(text=element_text(size=24),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.text.y = element_text(size=20,family="Courier"),
axis.title.y = element_blank(),
legend.position="top",
legend.spacing.y=unit(2,"lines"),
legend.key.size = unit(3,"lines"),
legend.text = element_text(margin = margin(r=1,unit="cm")),
panel.grid=element_blank(),
panel.spacing.x=unit(2, "lines"),
strip.background=element_blank(),
panel.background = element_rect(fill="white")) +
scale_y_log10(limits=c(316,3162277), expand = c(0, 0), breaks = scales::trans_breaks("log10", function(x) 10^x),labels = scales::trans_format("log10", scales::math_format(10^.x))) +
geom_text(aes(x=asv_code,y=total_reads,label=species),size=8,hjust=0, nudge_y=0.07,show.legend = FALSE,fontface="italic",family="Helvetica") +
geom_text(aes(x=asv_code,y=total_reads,label=sig),size=8,vjust=-0.4,show.legend = FALSE) +
guides(color=guide_legend(ncol=4, title.position = "top"), shape=guide_legend(ncol=3,title.position="top")) +
scale_color_manual(values=classPalette, breaks=unique(indic_substrate_top$class), name="Class") +
scale_shape_manual(values=biogeoShapes, name="Biogeographic Distribution", breaks=c("Polar","Polar-Temperate","Cosmopolitan","Unallocated"))
pdf("../main_figures/indicatorASV_substrate.pdf", height=17, width=24); plot(indic_substrate_plot); dev.off()
unique(indic_substrate_top$class)
View(taxa_DNA)
# Class Palette
classColors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet = "classes") %>% select(class,color_hex)
classPalette<-as.vector(classColors$color_hex)
names(classPalette)<-classColors$class
indic_substrate_plot<-lollipop_chart(indic_substrate_top,asv_code,total_reads,facet=substrate, color=class, pch=biogeo,line_size=0.5, point_size=7) +
theme_bw() +
ylab("Total number of DNA reads of ASVs within substrate") +
theme(text=element_text(size=24),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.text.y = element_text(size=20,family="Courier"),
axis.title.y = element_blank(),
legend.position="top",
legend.spacing.y=unit(2,"lines"),
legend.key.size = unit(3,"lines"),
legend.text = element_text(margin = margin(r=1,unit="cm")),
panel.grid=element_blank(),
panel.spacing.x=unit(2, "lines"),
strip.background=element_blank(),
panel.background = element_rect(fill="white")) +
scale_y_log10(limits=c(316,3162277), expand = c(0, 0), breaks = scales::trans_breaks("log10", function(x) 10^x),labels = scales::trans_format("log10", scales::math_format(10^.x))) +
geom_text(aes(x=asv_code,y=total_reads,label=species),size=8,hjust=0, nudge_y=0.07,show.legend = FALSE,fontface="italic",family="Helvetica") +
geom_text(aes(x=asv_code,y=total_reads,label=sig),size=8,vjust=-0.4,show.legend = FALSE) +
guides(color=guide_legend(ncol=4, title.position = "top"), shape=guide_legend(ncol=1,title.position="top")) +
scale_color_manual(values=classPalette, breaks=unique(indic_substrate_top$class), name="Class") +
scale_shape_manual(values=biogeoShapes, name="Biogeographic Distribution", breaks=c("Polar","Polar-Temperate","Cosmopolitan","Unallocated"))
indic_substrate_plot
# Class Palette
classColors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet = "classes") %>% select(class,color_hex)
# Class Palette
classColors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet = "classes") %>% select(class,color_hex)
# Biogeography Palette
biogeoColors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet = "biogeo") %>% select(biogeo,color_hex)
#Set working directory using relative file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Read phyloseq file and R packages
source("../R_ice_camp/GE_IC_read_phyloseq.R")
#Adding sample labels, clusters, ice and water depths, metaPR2 cASVs, biogeography of ASVs, culturability of ASVs,.
source("../R_ice_camp/GE_IC_data_organisation.R") #input is ps_unsorted; output is ps
#Trophic mode assignment
source("../R_ice_camp/GE_IC_PR2trophic_allocation.R")
# rerun trophic_mode.R separately if there are any updates
#Read color allocation for plots
source("../R_ice_camp/GE_IC_color.R")
#load functions (e.g. treemap, longform, normalize)
source("../R_ice_camp/GE_IC_functions.R")
ps_TS <- ps %>% subset_samples(is.na(experiment_name) & (substrate=="water" | substrate=="ice"))
# Do normalizations and transformation
ps_TS <- phyloseq_normalize_median(ps_TS)
long <- phyloseq_transform_to_long(ps_TS)
taxa <- data.frame(tax_table(ps_TS)) %>% rownames_to_column("asv_code")
long$fraction_name<-factor(long$fraction_name, levels=c("pico", "nano", "micro"))
long$trophic_mode<-factor(long$trophic_mode, levels=c("photosynthetic","mixotrophic","dinoflagellata","heterotrophic"))
long$depth_level<-factor(long$depth_level, levels=c("ICE_1","ICE_0", "WATER_1","WATER_2", "WATER_3", "WATER_4"))
long$date <- lubridate::ymd(long$date)
ice_thickness <- read_excel("../R_ice_camp/metadata/metadata_icesnow.xlsx", skip=2)
snow <- select(ice_thickness, `Date`:`Snow (cm)`)
snow <- cbind(snow, data.frame(rep("Snow", 30)))
names(snow)[names(snow) == "rep..Snow...30."] <- "type"
names(snow)[names(snow) == "Snow (cm)"] <- "thickness"
ice <- select(ice_thickness,`Date`,`Ice (cm)`)
ice <- cbind(ice, data.frame(rep("Ice", 30)))
names(ice)[names(ice) == "rep..Ice...30."] <- "type"
names(ice)[names(ice) == "Ice (cm)"] <- "thickness"
ice$thickness<-ice$thickness*-1 # make the ice below sea level
ice_snow <- merge(snow,ice, all = TRUE)
names(ice_snow)[names(ice_snow) == "Date"] <- "date"
ice_snow$date <-  lubridate::ymd(ice_snow$date)
ice_snow$type<-factor(ice_snow$type,levels=c("Snow","Ice"))
#adding ice sampling depth as points
ice_samples<-subset(ice_snow, ice_snow$type=="Ice" & as.character(ice_snow$date) %in% c("2016-05-09","2016-05-23","2016-05-30","2016-06-06","2016-06-13","2016-06-20","2016-06-27"))
ice_samples$depth_level<-"ICE_0"
ice_samples2<-ice_samples
ice_samples2$thickness<-ice_samples2$thickness + 10
ice_samples2$depth_level<-"ICE_1"
ice_samples<-rbind(ice_samples,ice_samples2)
plot_ice_snow <- ggplot(ice_snow, aes(x = date, y = thickness, fill=type)) +
geom_area() +
geom_vline(xintercept = as.numeric(as.Date("2016-06-03")), linetype = "dashed", size=1, alpha=0.5) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-15")), linetype = "dashed", size=1, alpha=0.5) +
scale_fill_manual(values = c("Snow" = "#1261A0", "Ice" = "#58cced")) +
xlab("Date") +
ylab("Thickness (cm)") +
theme_bw() +
labs(group = "type", fill = "type", col = "type")+
theme(axis.text=element_text(size=22),
axis.title=element_text(size=22),
legend.text = element_text(size=24),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_x_date(limits=c(as.Date("2016-05-01"),as.Date("2016-07-25"))) +
theme(legend.title = element_blank(), legend.position = c(0.90, 0.50),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
panel.grid = element_blank()) +
geom_point(data=ice_samples, aes(x=date,y=thickness),size=4, color="black",show.legend = FALSE) +
geom_line(data=ice_samples, aes(group=depth_level),color="black") +
geom_dl(data=ice_samples,aes(label = depth_level), method = list(dl.trans(x = x + 1), dl.combine("last.points"),cex=1.5))
#plot_ice_snow
#plot the sampling depths across time
depth_plot<-long%>%group_by(date,substrate,depth,depth_level)%>%summarize(n_reads=sum(n_reads))
depth_plot$date <- lubridate::ymd(depth_plot$date)
plot_depth <- ggplot(depth_plot,aes(x=date, y=depth)) +
#rect1 + rect2 + rect3 +
geom_vline(xintercept = as.numeric(as.Date("2016-06-03")), linetype = "dashed", size=1, alpha=0.5) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-15")), linetype = "dashed", size=1, alpha=0.5) +
geom_point(size=4,shape="triangle") +
theme_bw() +
geom_line(aes(group=depth_level)) +
theme(axis.text=element_text(size=22),
axis.text.x=element_text(angle = 45, hjust = 1),
axis.title=element_text(size=22),
axis.title.x=element_blank(),
panel.grid = element_blank()) +
scale_y_reverse() +
ylab("Water Depth (m)") +
scale_x_date(breaks=depth_plot$date,limits=c(as.Date("2016-05-01"),as.Date("2016-07-25")), date_labels = "%B %d") +
geom_dl(aes(label = depth_level), method = list(dl.trans(x = x + 1), dl.combine("last.points"),cex=1.5))
plot_depth
depth_sampled <-  c(1.5, 5, 10, 20, 30, 40, 60)
ge_par_all <- read_csv("../R_ice_camp/metadata/metadata_PAR.csv.gz")
ge_par <- filter(ge_par_all, depth_edz_m %in% 2 & year_utc=="2016")
ge_par <- subset(ge_par,is.na(ge_par$par_d_fit_daily_ein_m_2_day_1)==FALSE)
ge_par_mean <- ge_par %>% group_by(year_utc, month_utc, day_utc, depth_edz_m ) %>%
dplyr::summarise(par_daily_mean = mean(par_d_fit_daily_ein_m_2_day_1)) %>%
dplyr::mutate(date = make_date(year_utc, month_utc, day_utc), depth_m = depth_edz_m, depth_m_char = as.character(depth_edz_m))
ge_par_mean$julian_day <- yday(as.POSIXlt(ge_par_mean$date, format="%d%b%y"))
ge_par_mean <- select(ungroup(ge_par_mean), date, julian_day, depth_m, par_daily_mean, year_utc)
ge_par_mean_2016 <- filter(ge_par_mean, year_utc == 2016)
ge_par_mean_2016$year_utc <- factor(ge_par_mean_2016$year_utc)
par_plot <- ggplot(ge_par_mean_2016, aes(x = date, y = par_daily_mean)) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-03")), linetype = "dashed", size=1, alpha=0.5) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-15")), linetype = "dashed", size=1, alpha=0.5) +
geom_line() +
geom_point(size=3) +
ylab(bquote("PAR ("*mol~m^{-2}~d^{-1}*")")) +
theme_bw()+
labs(group = "Year", fill = "Year", col = "Year") +
theme(axis.text=element_text(size=22),
axis.title=element_text(size=22),
legend.title =element_text(size=22,face="bold"),
legend.text = element_text(size=22),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid = element_blank()) +
scale_x_date(limits=c(as.Date("2016-05-01"),as.Date("2016-07-25"))) +
scale_y_continuous(breaks = seq(0, 12.5, by = 2.5), limits = c(0,12.5))
par_plot
chla_pigments<-read.csv("../R_ice_camp/metadata/metadata_chla_pigments.csv") %>%
filter(str_detect(mission, "ice_camp")) %>%
filter(sample_type %in% c("water", "ice")) %>%
filter(pigment == "Chlorophyll a") %>%
filter(sample_source != "underice") %>%
filter(method == "HPLC") %>%
filter(mission == "ice_camp_2016")
# Water Pigment
chla_water_m2 <- chla_pigments %>%
filter(sample_type == "water") %>%
filter(depth_m <= 60) %>% # Should we use 40m?
drop_na(conc_mg_m3) %>%
group_by(mission, date) %>%
mutate(n = n()) %>%
filter(n >= 3)
chla_water_m2 <- chla_water_m2 %>%
arrange(depth_m) %>%
group_by(mission, date, sample_type) %>%
nest() %>%
mutate(tchla_mg_m2 = map_dbl(data, ~pracma::trapz(.$depth_m, .$conc_mg_m3))) %>% # 1 ug L == 1 mg m-3
select(-data)
# Ice Pigment
chla_ice_m2 <- chla_pigments %>%
filter(sample_type == "ice") %>%
filter(sample_source %in% c("0-3 cm", "3-10 cm")) %>%
group_by(mission, sample_type, date, sample_source) %>%
summarise(conc_mg_m2 = mean(conc_mg_m2)) %>%
group_by(mission, date) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
group_by(mission, date, sample_type) %>%
summarise(tchla_mg_m2 = sum(conc_mg_m2))
chla_m2 <- bind_rows(chla_ice_m2, chla_water_m2)
chla_m2$date <- lubridate::ymd(chla_m2$date)
chla_plot_massicotte <- ggplot(chla_m2,aes(x = date, y = tchla_mg_m2, color=sample_type)) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-03")), linetype = "dashed", size=1, alpha=0.5) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-15")), linetype = "dashed", size=1, alpha=0.5) +
geom_line(data=chla_m2,show.legend = FALSE,size = 1) +
geom_point(data=chla_m2,show.legend = FALSE, size = 3) +
scale_y_log10() +
annotation_logticks(sides = "l") +
xlab(NULL) +
ylab(bquote("Chl a ("*mg~m^{-2}*")")) +
theme_bw() +
theme(axis.text=element_text(size=22),
axis.title=element_text(size=22,face="bold"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid = element_blank()) +
scale_color_manual(values = c("ice" = "#1261A0", "water" = "#48aaad")) +
scale_x_date(limits=c(as.Date("2016-05-01"),as.Date("2016-07-25"))) +
geom_dl(aes(label = sample_type), method = list(dl.trans(x = x + 0.5), dl.combine("last.points"),cex=2))
chla_plot_massicotte
## Plotting under-ice Pico
fcm <- read_excel("../R_ice_camp/metadata/metadata_cytometry.xlsx", sheet="All data")%>%
filter(year=="2016") %>%
filter(sample_type %in% c("ice","water")) %>%
filter(depth_level!="underice") %>%
filter(sample_code<=6 | sample_code%in%c("IC3","IC4")) #only take those involved in metabarcoding
fcm_pico <- fcm %>%
group_by(date, sample_type) %>%
summarise(pico_ml_mean = mean(Pico_mL))
fcm_nano <- fcm %>%
group_by(date, sample_type) %>%
summarise(nano_ml_mean = mean(Nano_mL))
fcm <- left_join(fcm_pico,fcm_nano,by=c("date","sample_type"))
fcm$pico_nano_ml <- fcm$pico_ml_mean + fcm$nano_ml_mean
fcm$date <-  lubridate::ymd(fcm$date)
fcm_plot <- ggplot(fcm,aes(x = date, y = pico_nano_ml, color=sample_type)) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-03")), linetype = "dashed", size=1, alpha=0.5) +
geom_vline(xintercept = as.numeric(as.Date("2016-06-15")), linetype = "dashed",  size=1, alpha=0.5) +
geom_line(data=fcm,show.legend = FALSE,size = 1) +
geom_point(data=fcm,show.legend = FALSE, size = 3) +
scale_y_log10() +
annotation_logticks(sides = "l") +
xlab(NULL) +
ylab("Pico-Nano FCM (cells/mL)") +
theme_bw() +
theme(axis.text=element_text(size=22),
axis.title=element_text(size=22),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid = element_blank()) +
scale_color_manual(values = c("ice" = "#1261A0", "water" = "#48aaad")) +
scale_x_date(limits=c(as.Date("2016-05-01"),as.Date("2016-07-25"))) +
geom_dl(aes(label = sample_type), method = list(dl.trans(x = x + 0.5), dl.combine("last.points"),cex=2))
fcm_plot
pdf("../main_figures/environmental_parameters.pdf", height=20, width=22); plot(par_plot/chla_plot_massicotte/fcm_plot/plot_ice_snow/plot_depth); dev.off()
sampling_dates<-c("2016-05-09","2016-05-23","2016-05-30","2016-06-06","2016-06-13","2016-06-20","2016-06-27","2016-07-06","2016-07-18")
sampling_dates_plot<-c("May 09","May 23","May 30","Jun 06","Jun 13","Jun 20","Jun 27","Jul 06","Jul 18")
long$date <- factor(long$date, levels=sampling_dates)
long$date<-str_replace(long$date,"2016-05-","May ")
long$date<-str_replace(long$date,"2016-06-","Jun ")
long$date<-str_replace(long$date,"2016-07-","Jul ")
long$date <- factor(long$date, levels=sampling_dates_plot)
ps_TS_DNA <- subset_samples(ps_TS, DNA_RNA=="DNA")
ps_TS_DNA <- subset_taxa(ps_TS_DNA, trophic_mode=="photosynthetic")
ord_DNA <- ordinate(ps_TS_DNA, "NMDS", "bray")
p <- plot_ordination(ps_TS_DNA, ord_DNA, type="sample", color="cluster", shape="fraction_name") +
geom_point(size=6) +
theme(text = element_text(size = 20)) +
scale_color_manual(values=nmdsPalette, name="Substrate-stage") +
theme_bw() +
annotate("text", x=1.2, y=1.5, label=str_c("Stress = ",round(ord_DNA$stress,4)),size=8) +
theme(axis.text=element_text(size=22),
axis.title=element_text(size=22,face="bold"),
legend.text = element_text(size=22),
legend.title = element_text(size=22))
p
cluster = get_variable(ps_TS_DNA, "fraction_name")
cluster_ano = anosim(phyloseq::distance(ps_TS_DNA,"bray"),cluster)
print(str_c("ANOSIM size fraction | R = ",round(cluster_ano$statistic,4)," | p = ",cluster_ano$signif))
cluster = get_variable(ps_TS_DNA, "substrate")
cluster_ano = anosim(phyloseq::distance(ps_TS_DNA,"bray"),cluster)
print(str_c("ANOSIM substrate | R = ",round(cluster_ano$statistic,4)," | p = ",cluster_ano$signif))
ps_TS_DNA_ice<-subset_samples(ps_TS_DNA, substrate=="ice")
cluster = get_variable(ps_TS_DNA_ice, "bloom_stage")
cluster_ano = anosim(phyloseq::distance(ps_TS_DNA_ice,"bray"),cluster)
print(str_c("ANOSIM Ice Bloom_stage | R = ",round(cluster_ano$statistic,4)," | p = ",cluster_ano$signif))
cluster = get_variable(ps_TS_DNA_ice, "fraction_name")
cluster_ano = anosim(phyloseq::distance(ps_TS_DNA_ice,"bray"),cluster)
print(str_c("ANOSIM Ice size fraction | R = ",round(cluster_ano$statistic,4)," | p = ",cluster_ano$signif))
ps_TS_DNA_water<-subset_samples(ps_TS_DNA, substrate=="water")
cluster = get_variable(ps_TS_DNA_water, "bloom_stage")
cluster_ano = anosim(phyloseq::distance(ps_TS_DNA_water,"bray"),cluster)
print(str_c("ANOSIM Water Bloom_stage | R = ",round(cluster_ano$statistic,4)," | p = ",cluster_ano$signif))
cluster = get_variable(ps_TS_DNA_water, "fraction_name")
cluster_ano = anosim(phyloseq::distance(ps_TS_DNA_water,"bray"),cluster)
print(str_c("ANOSIM Water size fraction | R = ",round(cluster_ano$statistic,4)," | p = ",cluster_ano$signif))
pdf("../main_figures/nmds.pdf", height=12, width=20); plot(p); dev.off()
unallocated<-subset(long,is.na(long$trophic_mode)==TRUE)
unallocated<-unallocated[!duplicated(unallocated$species), ]
long_DNA <- subset(long, DNA_RNA=="DNA")
long_DNA <- subset(long_DNA, !(species%in%unallocated$species))
#length(unique(long_DNA$species))
long_DNA$trophic_mode<-factor(long_DNA$trophic_mode, levels=c("photosynthetic","mixotrophic","dinoflagellata","heterotrophic"))
long_DNA_trophic<-long_DNA
long_DNA_trophic$date <- factor(long_DNA_trophic$date, levels=sampling_dates_plot)
long_DNA_trophic <- long_DNA_trophic %>% group_by(fraction_name,depth_level,date,trophic_mode) %>% summarize(n_reads=sum(n_reads))
p <- ggplot(long_DNA_trophic, aes(x=date, y=n_reads, fill=trophic_mode)) +
geom_bar(position="fill", stat="identity", color="black",size=0.3) +
theme_bw() +
theme(text=element_text(size=26),
axis.text.x = element_text(angle = 45,  hjust=1, vjust=-0.5),
axis.title.x=element_blank(),
legend.title=element_blank(),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid=element_blank(),
strip.background=element_blank(),
legend.key.size=unit(2,"line")) +
ylab("Proportion of DNA reads") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x") +
scale_fill_manual(values=trophicPalette,
breaks = c("photosynthetic","mixotrophic","dinoflagellata","heterotrophic"))
p
pdf("../main_figures/trophic_overall.pdf", height=14, width=20); plot(p); dev.off()
long_biogeo <- long_DNA %>%
filter(trophic_mode=="photosynthetic") %>%
group_by(fraction_name,depth_level,date,biogeo) %>%
summarize(n_reads=sum(n_reads))
long_biogeo$date <- factor(long_biogeo$date, levels=sampling_dates_plot)
unique(long_biogeo$biogeo)
long_biogeo$biogeo<-factor(long_biogeo$biogeo, levels=c("Polar","Polar-Temperate","Temperate","Cosmopolitan","Unallocated"))
unallocated<-long_biogeo %>% filter(biogeo=="Unallocated")
sum(unallocated$n_reads)/sum(long_biogeo$n_reads)
p <- ggplot(long_biogeo, aes(x=date, y=n_reads, fill=biogeo)) +
geom_bar(position="fill", stat="identity",color="black",size=0.3) +
theme_bw() +
theme(text=element_text(size=26),
axis.text.x = element_text(angle = 45,  hjust=1, vjust=-0.5),
axis.title.x=element_blank(),
legend.title=element_blank(),
panel.spacing.x=unit(2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid=element_blank(),
strip.background=element_blank(),
legend.key.size=unit(2,"line")) +
ylab("Proportion of DNA reads") +
scale_y_continuous(labels=scales::percent, breaks = seq(0,1, by=0.5)) +
facet_grid(cols = vars(fraction_name), rows=vars(depth_level), scales="free_x") +
scale_fill_manual(values=biogeoPalette,
breaks = c("Polar","Polar-Temperate","Temperate","Cosmopolitan","Unallocated"))
p
pdf("../main_figures/biogeo_photosynthetic.pdf", height=14, width=20); plot(p); dev.off()
ASVs <- (unique(long_DNA$asv_code))
taxa_DNA <- taxa %>%
filter(asv_code%in%ASVs) %>%
filter(trophic_mode=="photosynthetic")
long_photosynthetic <- subset(long_DNA,trophic_mode=="photosynthetic")
long_phyto_ice<-subset(long_photosynthetic,substrate=="ice")
long_phyto_water<-subset(long_photosynthetic,substrate=="water")
length(unique(long_DNA$asv_code))
#ice_species<-as.data.frame(unique(long_phyto_ice$species))
water_species<-as.data.frame(unique(long_phyto_water$species))
tree_phyto_ice <- phyloseq_long_treemap(long_phyto_ice,division,class,"")
tree_phyto_water <- phyloseq_long_treemap(long_phyto_water,division,class,"")
long_DNA_ice<-subset(long_DNA,substrate=="ice" & trophic_mode=="photosynthetic")
long_DNA_water<-subset(long_DNA,substrate=="water" & trophic_mode=="photosynthetic")
DNA_ice <- long_DNA_ice %>%
group_by(class, species) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(n_reads))
species_levels<-DNA_ice$species
DNA_ice <-DNA_ice %>%
mutate(species=factor(species,species_levels))
DNA_water <- long_DNA_water %>%
group_by(class, species) %>%
summarize(n_reads=sum(n_reads)) %>%
arrange(desc(n_reads))
species_levels<-DNA_water$species
DNA_water <-DNA_water %>%
mutate(species=factor(species,species_levels))
DNA_ice<-DNA_ice[1:20,]
DNA_water<-DNA_water[1:20,]
options(scipen=200000)
DNA_ice_plot <- ggplot(DNA_ice, aes(x=n_reads, y=reorder(species,desc(species)), fill=class)) +
geom_bar(stat="identity") +
theme_bw() +
xlab("Number of reads")  +
ggtitle("Ice community") +
theme(text=element_text(size=24),
axis.text.y=element_text(face="italic"),
axis.title.y=element_blank(),
legend.position="top",
plot.title = element_text(hjust=0.5),
panel.grid=element_blank()) +
guides(fill = guide_legend(nrow = 2)) +
scale_fill_manual(values=classPalette, breaks=unique(DNA_ice$class), name="Class")
DNA_ice_plot
DNA_water_plot <- ggplot(DNA_water, aes(x=n_reads, y=reorder(species,desc(species)), fill=class)) +
geom_bar(stat="identity") +
theme_bw() +
xlab("Number of reads") +
ggtitle("Water community") +
theme(text=element_text(size=24),
axis.text.y=element_text(face="italic"),
axis.title.y=element_blank(),
legend.position="top",
plot.title = element_text(hjust=0.5),
panel.grid=element_blank()) +
guides(fill = guide_legend(nrow = 2)) +
scale_fill_manual(values=classPalette, breaks=unique(DNA_water$class), name="Class")
DNA_water_plot
pdf("../main_figures/community.pdf", height=17, width=21); plot((DNA_ice_plot+tree_phyto_ice)/(DNA_water_plot+tree_phyto_water)); dev.off()
#wide_photosynthetic <- long_photosynthetic %>% #pivot_wider(id_cols=c(sample_name,substrate),names_from=asv_code, values_from=n_reads,values_fill=0)
#abund<-wide_photosynthetic[,-c(1:2)]
#substrate<-wide_photosynthetic$substrate
#inv <- multipatt(abund, substrate, func="IndVal.g",control=how(nperm=9999))
#summary(inv, indvalcomp = TRUE)
#options(max.print=100)
#The above data was manually converted into csv and excel
#wide_photosynthetic <- long_photosynthetic %>% #pivot_wider(id_cols=c(sample_name,bloom_cluster),names_from=asv_code, values_from=n_reads,values_fill=0)
#abund<-wide_photosynthetic[,-c(1:2)]
#stage<-wide_photosynthetic$bloom_cluster
#inv <- multipatt(abund, stage, func="IndVal.g",control=how(nperm=9999))
#summary(inv, indvalcomp = TRUE)
#The above data was manually converted into csv and excel
#wide_photosynthetic <- long_photosynthetic %>%
#  filter(bloom_cluster=="Stage_I") %>%
#  pivot_wider(id_cols=c(sample_name,substrate),names_from=asv_code, values_from=n_reads,values_fill=0)
#abund<-wide_photosynthetic[,-c(1:2)]
#substrate<-wide_photosynthetic$substrate
#inv <- multipatt(abund, substrate, func="IndVal.g",control=how(nperm=9999))
#summary(inv, indvalcomp = TRUE)
#options(max.print=1000)
#The above data was manually converted into csv and excel
#wide_photosynthetic <- long_photosynthetic %>%
#  filter(bloom_cluster=="Stages_II_and_III") %>%
#  pivot_wider(id_cols=c(sample_name,substrate),names_from=asv_code, values_from=n_reads,values_fill=0)
#abund<-wide_photosynthetic[,-c(1:2)]
#substrate<-wide_photosynthetic$substrate
#inv <- multipatt(abund, substrate, func="IndVal.g",control=how(nperm=9999))
#summary(inv, indvalcomp = TRUE)
#options(max.print=1000)
##The above data was manually converted into csv and excel
# PCH allocation for biogeo
biogeoShapes<-c(15,17,16,18,8,9,10,4,3)
names(biogeoShapes)<-c("Polar","Polar-Temperate","Polar-Tropical","Temperate","Temperate-Tropical","Tropical","Cosmopolitan","Unallocated","NA")
indic_substrate <- read_excel("../supplementary_tables/GE_IC_indicspecies.xlsx", sheet="substrate")
indic_phyto_ice <- long_phyto_ice %>%
group_by(asv_code) %>%
summarize(total_reads=sum(n_reads)) %>%
arrange(desc(total_reads))
indic_phyto_ice <- left_join(indic_phyto_ice, taxa, by="asv_code")
indic_phyto_ice$substrate <- "ice"
indic_phyto_ice <- left_join(indic_phyto_ice, indic_substrate, by=c("asv_code","substrate"))
indic_phyto_ice <- filter(indic_phyto_ice,as.numeric(indic_phyto_ice$species_boot)>=80)
indic_phyto_water <- long_phyto_water %>%
group_by(asv_code) %>%
summarize(total_reads=sum(n_reads)) %>%
arrange(desc(total_reads))
indic_phyto_water <- left_join(indic_phyto_water, taxa, by="asv_code")
indic_phyto_water$substrate <- "water"
indic_phyto_water <- left_join(indic_phyto_water, indic_substrate, by=c("asv_code","substrate"))
indic_phyto_water <- filter(indic_phyto_water,as.numeric(indic_phyto_water$species_boot)>=80)
indic_substrate_top<-rbind(indic_phyto_ice[1:20,],indic_phyto_water[1:20,])
indic_substrate_top$asv_code<-ifelse(as.numeric(indic_substrate_top$PR2_matches)>0,str_c("B",indic_substrate_top$asv_code),indic_substrate_top$asv_code)
indic_substrate_top$species<-gsub("_"," ",indic_substrate_top$species)
unique(indic_substrate_top$class)
indic_substrate_plot<-lollipop_chart(indic_substrate_top,asv_code,total_reads,facet=substrate, color=class, pch=biogeo,line_size=0.5, point_size=7) +
theme_bw() +
ylab("Total number of DNA reads of ASVs within substrate") +
theme(text=element_text(size=24),
axis.text.x = element_text(angle = 0, hjust = 1),
axis.text.y = element_text(size=20,family="Courier"),
axis.title.y = element_blank(),
legend.position="top",
legend.spacing.y=unit(2,"lines"),
legend.key.size = unit(3,"lines"),
legend.text = element_text(margin = margin(r=1,unit="cm")),
panel.grid=element_blank(),
panel.spacing.x=unit(2, "lines"),
strip.background=element_blank(),
panel.background = element_rect(fill="white")) +
scale_y_log10(limits=c(316,3162277), expand = c(0, 0), breaks = scales::trans_breaks("log10", function(x) 10^x),labels = scales::trans_format("log10", scales::math_format(10^.x))) +
geom_text(aes(x=asv_code,y=total_reads,label=species),size=8,hjust=0, nudge_y=0.07,show.legend = FALSE,fontface="italic",family="Helvetica") +
geom_text(aes(x=asv_code,y=total_reads,label=sig),size=8,vjust=-0.4,show.legend = FALSE) +
guides(color=guide_legend(ncol=4, title.position = "top"), shape=guide_legend(ncol=1,title.position="top")) +
scale_color_manual(values=classPalette, breaks=unique(indic_substrate_top$class), name="Class") +
scale_shape_manual(values=biogeoShapes, name="Biogeographic Distribution", breaks=c("Polar","Polar-Temperate","Cosmopolitan","Unallocated"))
indic_substrate_plot
pdf("../main_figures/indicatorASV_substrate.pdf", height=17, width=24); plot(indic_substrate_plot); dev.off()
# NMDS Palette
nmds_colors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet="nmds")
# Biogeography Palette
biogeoColors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet = "biogeo") %>% select(biogeo,color_hex)
#Set working directory using relative file path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Class Palette
classColors <- read_excel("../R_ice_camp/GE_IC_clarence_colors.xlsx", sheet = "classes") %>% select(class,color_hex)
